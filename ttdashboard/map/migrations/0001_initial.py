# Generated by Django 3.1.3 on 2021-08-20 18:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('discord_id', models.BigIntegerField(verbose_name='Discord ID')),
                ('avatar_url', models.URLField(verbose_name='Avatar URL')),
                ('is_dead', models.BooleanField(default=False, verbose_name='Is dead?')),
                ('player_color', models.CharField(max_length=18, verbose_name="Player's color, in format 'rgb(x, x, x)'")),
                ('ad_vote', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='map.player', verbose_name='Daily Vote for this dead player')),
            ],
        ),
        migrations.CreateModel(
            name='Tank',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('action_points', models.IntegerField(default=1, verbose_name='Action points')),
                ('health_points', models.IntegerField(default=3, verbose_name='Health points')),
                ('range', models.IntegerField(default=2, verbose_name='Range')),
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='map.player', verbose_name='Player')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('x', models.IntegerField(default=0, verbose_name='Position X')),
                ('y', models.IntegerField(default=0, verbose_name='Position Y')),
                ('tank', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='map.tank', verbose_name='Tank')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('guild_id', models.BigIntegerField(verbose_name='Guild ID')),
                ('allowed_joining', models.BooleanField(verbose_name='Is everyone allowed to join ?')),
                ('max_players', models.IntegerField(verbose_name='Max players')),
                ('game_talk_channel', models.BigIntegerField(verbose_name='Game discussions channel ID')),
                ('commands_channel', models.BigIntegerField(verbose_name='Commands channel ID')),
                ('grid_size_x', models.IntegerField(verbose_name='Grid size X')),
                ('grid_size_y', models.IntegerField(verbose_name='Grid size Y')),
                ('is_action_day_1d', models.BooleanField(verbose_name='Is an Action Day lasting 1 day ?')),
                ('ad_duration', models.IntegerField(default=1440.0, verbose_name='Duration of the AD in minutes')),
                ('is_started', models.BooleanField(default=False, verbose_name='Is the game started ?')),
                ('is_ended', models.BooleanField(default=False, verbose_name='Is the game ended ?')),
                ('next_ad_end', models.DateTimeField(null=True, verbose_name='Next AD end')),
                ('game_start_date', models.DateTimeField(verbose_name='Game start')),
                ('players', models.ManyToManyField(to='map.Player', verbose_name='Player List')),
            ],
        ),
        migrations.CreateModel(
            name='BaseEvent',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now=True, verbose_name='Date')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.game', verbose_name='Game')),
            ],
        ),
        migrations.CreateModel(
            name='TransferEvent',
            fields=[
                ('baseevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='map.baseevent')),
                ('defensive_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.player', verbose_name='Defensive Player')),
                ('defensive_tank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transfer_defensive_tank', to='map.tank', verbose_name='Tank')),
                ('offensive_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_offensive_player', to='map.player', verbose_name='Offensive Player')),
                ('offensive_tank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transfer_offensive_tank', to='map.tank', verbose_name='Tank')),
            ],
            bases=('map.baseevent',),
        ),
        migrations.CreateModel(
            name='ShootEvent',
            fields=[
                ('baseevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='map.baseevent')),
                ('defensive_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.player', verbose_name='Defensive Player')),
                ('defensive_tank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='shoot_defensive_tank', to='map.tank', verbose_name='Tank')),
                ('offensive_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offensive_player', to='map.player', verbose_name='Offensive Player')),
                ('offensive_tank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='shoot_offensive_tank', to='map.tank', verbose_name='Tank')),
            ],
            bases=('map.baseevent',),
        ),
        migrations.CreateModel(
            name='RangeUpgradeEvent',
            fields=[
                ('baseevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='map.baseevent')),
                ('new_range', models.IntegerField(verbose_name='New Range')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.player', verbose_name='Player')),
            ],
            bases=('map.baseevent',),
        ),
        migrations.CreateModel(
            name='MoveEvent',
            fields=[
                ('baseevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='map.baseevent')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.player', verbose_name='Player')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='current_position', to='map.position', verbose_name='Position')),
                ('previous_position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='map.position', verbose_name='Previous position')),
            ],
            bases=('map.baseevent',),
        ),
    ]
